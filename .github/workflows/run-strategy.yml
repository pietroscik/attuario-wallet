name: Run Strategy
on:
  workflow_dispatch:

jobs:
  run-strategy:
    runs-on: ubuntu-latest

    # NIENTE auth, niente gh login
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 1

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Load .env.example into env (only if not already set)
        shell: bash
        run: |
          while IFS='=' read -r k v; do
            [ -z "$k" ] && continue
            case "$k" in \#*|'') continue;; esac
            if [ -z "${!k}" ]; then
              echo "$k=$v" >> "$GITHUB_ENV"
            fi
          done < .env.example

      - name: Set required runtime env & sane defaults
        shell: bash
        run: |
          # Se non presente da secrets/vars/.env.example, usa il public Base RPC
          : "${RPC_URL:=https://mainnet.base.org}"
          echo "RPC_URL=$RPC_URL" >> "$GITHUB_ENV"

          # Dry-run sicuro: nessuna tx on-chain
          echo "ONCHAIN_ENABLED=false" >> "$GITHUB_ENV"
          echo "PORTFOLIO_DRY_RUN=true" >> "$GITHUB_ENV"
          echo "TREASURY_AUTOMATION_ENABLED=false" >> "$GITHUB_ENV"

          # Catena Base
          echo "CHAIN_ID=8453" >> "$GITHUB_ENV"
          echo "ALLOWED_CHAIN_IDS=8453" >> "$GITHUB_ENV"
          echo "REQUIRE_BASE=true" >> "$GITHUB_ENV"
          echo "SEARCH_SCOPE=CONFIG_ONLY" >> "$GITHUB_ENV"
          echo "MIN_TVL_USD=0" >> "$GITHUB_ENV"
          echo "MAX_APY_STALENESS_MIN=1440" >> "$GITHUB_ENV"
          echo "MIN_DUST_USD=0.25" >> "$GITHUB_ENV"
          echo "MIN_INVESTMENT_PER_POOL_USD=100" >> "$GITHUB_ENV"
          echo "TREND_WINDOW_D=14" >> "$GITHUB_ENV"
          echo "TREND_Z_MIN=0.5" >> "$GITHUB_ENV"
          echo "EDGE_MIN_NET_USD=0.5" >> "$GITHUB_ENV"
          echo "HORIZON_DAYS=1.0" >> "$GITHUB_ENV"
          echo "EDGE_INCLUDE_WITHDRAW=true" >> "$GITHUB_ENV"

          # Qualche default utile già verificato
          echo "DEFILLAMA_API=https://yields.llama.fi" >> "$GITHUB_ENV"
          echo "WETH_TOKEN_ADDRESS=0x4200000000000000000000000000000000000006" >> "$GITHUB_ENV"
          echo "USDC_BASE=0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913" >> "$GITHUB_ENV"
          
          # Set REQUIRE_ADAPTER_BEFORE_RANK to filter pools without adapters
          echo "REQUIRE_ADAPTER_BEFORE_RANK=1" >> "$GITHUB_ENV"

      - name: Create ephemeral .env
        shell: bash
        run: |
          # Create .env from environment variables for python-dotenv compatibility
          # This ensures all configuration is visible in one place
          cat > .env << 'EOF'
          # Ephemeral .env generated by CI workflow
          # DO NOT COMMIT THIS FILE
          
          # Core settings
          RPC_URL=${{ env.RPC_URL }}
          ONCHAIN_ENABLED=${{ env.ONCHAIN_ENABLED }}
          PORTFOLIO_DRY_RUN=${{ env.PORTFOLIO_DRY_RUN }}
          TREASURY_AUTOMATION_ENABLED=${{ env.TREASURY_AUTOMATION_ENABLED }}
          
          # Chain configuration
          CHAIN_ID=${{ env.CHAIN_ID }}
          ALLOWED_CHAIN_IDS=${{ env.ALLOWED_CHAIN_IDS }}
          REQUIRE_BASE=${{ env.REQUIRE_BASE }}
          SEARCH_SCOPE=${{ env.SEARCH_SCOPE }}
          
          # Selection constraints
          MIN_TVL_USD=${{ env.MIN_TVL_USD }}
          MAX_APY_STALENESS_MIN=${{ env.MAX_APY_STALENESS_MIN }}
          MIN_DUST_USD=${{ env.MIN_DUST_USD }}
          MIN_INVESTMENT_PER_POOL_USD=${{ env.MIN_INVESTMENT_PER_POOL_USD }}
          
          # Adaptive metrics
          TREND_WINDOW_D=${{ env.TREND_WINDOW_D }}
          TREND_Z_MIN=${{ env.TREND_Z_MIN }}
          EDGE_MIN_NET_USD=${{ env.EDGE_MIN_NET_USD }}
          HORIZON_DAYS=${{ env.HORIZON_DAYS }}
          EDGE_INCLUDE_WITHDRAW=${{ env.EDGE_INCLUDE_WITHDRAW }}
          
          # Adapter configuration
          REQUIRE_ADAPTER_BEFORE_RANK=${{ env.REQUIRE_ADAPTER_BEFORE_RANK }}
          
          # API endpoints
          DEFILLAMA_API=${{ env.DEFILLAMA_API }}
          
          # Token addresses (Base chain)
          WETH_TOKEN_ADDRESS=${{ env.WETH_TOKEN_ADDRESS }}
          USDC_BASE=${{ env.USDC_BASE }}
          EOF
          
          echo "✅ Created ephemeral .env file"

      - name: Show effective env (debug)
        run: |
          echo "RPC_URL=$RPC_URL"
          echo "ONCHAIN_ENABLED=$ONCHAIN_ENABLED"
          echo "PORTFOLIO_DRY_RUN=$PORTFOLIO_DRY_RUN"

      - name: Install dependencies
        run: pip install -r bots/wave_rotation/requirements.txt

      - name: Run strategy (dry-run)
        run: python bots/wave_rotation/strategy.py
