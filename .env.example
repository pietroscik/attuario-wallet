# ============================================================================
# ATTUARIO WALLET - ENVIRONMENT CONFIGURATION TEMPLATE
# ============================================================================
#
# SECURITY BEST PRACTICES:
# 1. NEVER commit private keys or API keys with real values to the repository
# 2. Keep sensitive credentials in your local .env file only
# 3. Use GitHub Secrets for CI/CD API keys and RPC endpoints
# 4. This file contains placeholders and verified public addresses only
#
# ADDRESS VERIFICATION GUIDE:
# Before using any address in production, verify it on-chain:
#
# For EVM chains (Base, Ethereum, BSC, Arbitrum, Avalanche, Linea, Sonic):
#   - Check on block explorer (basescan.org, etherscan.io, etc.)
#   - Verify with cast (foundry):
#       cast call <TOKEN_ADDRESS> "symbol()(string)" --rpc-url <RPC_URL>
#       cast call <TOKEN_ADDRESS> "decimals()(uint8)" --rpc-url <RPC_URL>
#       cast call <TOKEN_ADDRESS> "name()(string)" --rpc-url <RPC_URL>
#   - For LP tokens:
#       cast call <LP_ADDRESS> "token0()(address)" --rpc-url <RPC_URL>
#       cast call <LP_ADDRESS> "token1()(address)" --rpc-url <RPC_URL>
#   - For vaults:
#       cast call <VAULT_ADDRESS> "want()(address)" --rpc-url <RPC_URL>
#       cast call <VAULT_ADDRESS> "balance()(uint256)" --rpc-url <RPC_URL>
#
# For Solana:
#   - Verify on solscan.io or solana explorer
#   - Use: solana account <ADDRESS> --url <RPC_URL>
#
# For Aptos:
#   - Verify on explorer.aptoslabs.com
#   - Use: aptos account list --account <ADDRESS> --url <RPC_URL>
#
# ============================================================================

# DATA
DEFILLAMA_API=https://yields.llama.fi
AERODROME_API=
KAMINO_API=

# VAULT / RPC
BASE_RPC=https://mainnet.base.org
VAULT_ADDRESS=0x0000000000000000000000000000000000000000
PRIVATE_KEY=
ONCHAIN_ENABLED=false
PORTFOLIO_AUTOMATION_ENABLED=false
PORTFOLIO_DRY_RUN=true
TREASURY_AUTOMATION_ENABLED=false
TREASURY_ADDRESS=

# BASE CHAIN TOKEN ADDRESSES (Chain ID: 8453)
WETH_TOKEN_ADDRESS=0x4200000000000000000000000000000000000006
USDC_BASE=0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913
USDBC_BASE=0xd9aAEc86B65D86f6A7B5B1b0c42FFA531710b6CA
USDT_BASE=0xfde4C96c8593536E31F229EA8f37b2ADa2699bb2
CBBTC_BASE=0xcbB7C0000aB88B473b1f5aFd9ef808440eed33Bf
CBETH_BASE=0x2Ae3F1Ec7F1F5012CFEab0185bfc7aa3cf0DEc22
WSTETH_BASE=0xc1CBa3fCea344f92D9239c08C0568f6F2F0ee452

# PROTOCOL ADDRESSES ON BASE
AAVE_POOL_ADDRESS_8453=0xA238Dd80C259a72e81d7e4664a9801593F98d1c5
AAVE_WETH_GATEWAY_8453=0xa0d9C1E9E48Ca30c8d8C3B5D69FF5dc1f6DFfC24
AERODROME_ROUTER_8453=0xcF77a3Ba9A5CA399B7c97c74d54e5b1Beb874E43

# BEEFY VAULT ADDRESSES ON BASE
BEEFY_USDC_CBBTC_VAULT=0x9b4a58fddc209c66cef30f786c6fe3b8189c6c04
BEEFY_USDC_USDT_VAULT=0xf4B009B9D785C138787e4430D29B85FdB50b5441
BEEFY_WETH_USDC_VAULT=0xA20382dC7C06E7e2850f1154e7ED1D06Aeb47a0A
BEEFY_CBETH_WETH_VAULT=0x6A9E27A4b41aD09D95c81E111451a48704869775
BEEFY_WETH_USDT_VAULT=0x8FB5FBd1CD68f6708c2b797fd044733cab3F51fe

# ERC-4626 VAULT ADDRESSES ON BASE
WETH_YIELD_VAULT_BASE=0x38989BBA00BDF8181F4082995b3DEAe96163aC5D
CBBTC_ERC4626_VAULT=0x543257eF2161176D7C8cD90BA65C2d4CaEF5a796      # Moonw>
USDC_ERC4626_VAULT=0xef417a2512C5a41f69AE4e021648b69a7CdE5D03
SPARK_USDC_VAULT_BASE=0x7BfA7C4f149E7415b73bdeDfe609237e29CBF34A
SEAMLESS_USDC_VAULT_BASE=0x616a4E1db48e22028f6bbf20444Cd3b8e3273738
MOONWELL_FLAGSHIP_USDC_VAULT_BASE=0xC1256Ae5fF1cF2719d4937ADb3BBcCAB2E00A2cA
STEAKHOUSE_PRIME_USDC_VAULT_BASE=0xbEEF010F9cB27031ad51E3333f9Af9c6B1228183

# MORPHO BLUE VAULT ADDRESSES ON BASE
MORPHO_USDC_VAULT_BASE=0xef417a2512C5a41f69AE4e021648b69a7CdE5D03
MORPHO_WETH_VAULT_BASE=0x38989BBA00BDF8181F4082995b3DEAe96163aC5D

# SONNE FINANCE CTOKEN ADDRESSES (for Optimism)
SONNE_USDC_CTOKEN=
SONNE_WETH_CTOKEN=

# YEARN VAULT ADDRESSES ON BASE
YEARN_CHAIN_ID=8453
YEARN_API_BASE=https://ydaemon.yearn.fi
YEARN_USDC_VAULT_BASE=0xc3BD0A2193c8F027B82ddE3611D18589ef3f62a9
YEARN_WETH_VAULT_BASE=0xa72a60e6167E8fC5e523184911475c4B37B835E2
YEARN_CBBTC_VAULT_BASE=0x25f32eC89ce7732A4E9f8F3340a09259F823b7d3

# COMPOUND V3 (COMET) MARKETS ON BASE
COMET_USDC_MARKET_BASE=0x46e6b214b524310239732D51387075E0e70970bf
COMET_USDBC_MARKET_BASE=0x9c4ec768c28520B50860ea7a15bd7213a9fF58bf

# COMPOUND V2 / MOONWELL CTOKENS ON BASE
MOONWELL_CBETH_CTOKEN=0x3bf93770f2d4a794c3d9EBEfBAeBAE2a8f09A5E5
MOONWELL_WETH_CTOKEN=0x628ff693426583D9a7FB391E54366292F509D457
MOONWELL_USDC_CTOKEN=0xEdc817A28E8B93B03976FBd4a3dDBc9f7D176c22

# TELEGRAM (opzionale)
TELEGRAM_TOKEN=
TELEGRAM_CHATID=

# BINANCE (opzionale, riutilizzo chiavi esistenti)
BINANCE_API_KEY=

# LOG
LOG_PATH=./bots/wave_rotation/daily.log
LOG_LEVEL=INFO

# STRATEGY FLAGS
REQUIRE_ADAPTER_BEFORE_RANK=1
ALLOW_BUILTIN_ADAPTERS=false
WAVE_LOOP_INTERVAL_SECONDS=900
SWITCH_COOLDOWN_S=3600
RPC_TIMEOUT_S=30
SEARCH_SCOPE=
ALLOWED_CHAIN_IDS=
EDGE_HORIZON_H=24
FORCE_ADAPTER_FALLBACK=false
FX_EUR_PER_ETH=3000.0
GAS_RESERVE_ETH=0.01
TREASURY_SWAP_API_KEY=
GAS_PRICE_MAX_GWEI=50
GAS_MOVE_EST=300000
GAS_RESERVE_WEI=
ALLOWANCE_MODE=MAX
MAX_WRAP_PCT=0.8
SWAP_SLIPPAGE_BPS=100
MIN_TREASURY_SWAP_ETH=0.0005
TREASURY_SWAP_API=https://api.0x.org
ZEROX_API_KEY=

# ADAPTIVE METRICS & SELECTION CRITERIA
# Enable adaptive metrics-based selection (true/false)
ENABLE_ADAPTIVE_METRICS=true
# Adaptive granularity (minutes): 5, 15, 60, 1440 (day)
LOOP_INTERVAL_MIN=5
# Constraints and loss functions
APY_MIN_ANNUAL=0.08            # 8% minimum annual return required
APY_GAP_TOL=0.10               # Tolerance for gap (theoretical_APY - realized)
# Score adjustment multipliers
SCORE_BOOST_UP=1.1             # Score boost for UP regime pools (default: 1.1 = +10%)
SCORE_PENALTY_DOWN=0.5         # Score penalty for DOWN regime pools (default: 0.5 = -50%)
# Optional profile overrides
#DD_STOP_OVERRIDE=0.18
#VOL_CAP_OVERRIDE=0.03

# RPC & CHAIN CONFIGURATION
RPC_URL=
BASE_RPC_URL=
RPC_URLS=
RPC_FALLBACKS=
RPC_MAX_RETRIES=3
CHAIN_ID=8453
MAX_BLOCK_STALENESS_S=300
ETHERSCAN_API_KEY=

# ADAPTER & CACHE CONFIGURATION  
ADAPTER_CACHE_TTL_H=24
CACHE_TTL_SECONDS=3600
AUTO_TOP_N=10
POOL_TOKEN_MIN_BALANCE=0.0001
REQUIRE_BASE=false
CAPITAL_SCALE=1000000
VAULT_ABI_SOURCE=

# AAVE V3 (Alternative configuration)
AAVE_POOL_ADDRESS=

# MULTI-STRATEGY OPTIMIZER
MULTI_STRATEGY_ENABLED=false
STRATEGY_BUFFER_PERCENT=5.0
MIN_INVESTMENT_PER_POOL=0.001
MAX_POOLS_PER_ASSET=3

# ECONOMIC EDGE (facoltativo)
MIN_EDGE_SCORE=0
MIN_EDGE_ETH=0
MIN_EDGE_USD=0
ETH_PRICE_USD=
EDGE_GAS_MULTIPLIER=1.0
POOL_ALLOWLIST=
POOL_DENYLIST=
EURC_BASE=0x60a3E35Cc302bFA44Cb288Bc5a4F316Fdb1adb42
BEEFY_WETH_EURC_VAULT=

# ============================================================================
# 50 NEW ASSET INTEGRATION - ADDITIONAL ADDRESSES
# ============================================================================

# === UNISWAP V2 / BASESWAP ON BASE ===
# Verified from: https://docs.uniswap.org/contracts/v2/reference/smart-contracts/v2-deployments
# and https://docs.base.org/base-chain/network-information/ecosystem-contracts
UNISWAP_V2_ROUTER_BASE=0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24
# LP Token addresses for 22 Uniswap v2 style pools on Base
# TO POPULATE: Find LP pair addresses on basescan.org or DEX interfaces
# VERIFY with: cast call <LP_ADDRESS> "token0()(address)" --rpc-url $BASE_RPC
#              cast call <LP_ADDRESS> "token1()(address)" --rpc-url $BASE_RPC
#              cast call <LP_ADDRESS> "symbol()(string)" --rpc-url $BASE_RPC
WETH_X402_LP=
HOOD_WETH_LP=
PUMP_WETH_LP=
CRCL_WETH_LP=
TRUMP_WETH_LP_1=
TRUMP_WETH_LP_2=
TRUMP_WETH_LP_3=
MSTR_WETH_LP=
IP_WETH_LP=
IMAGINE_WETH_LP=
GRAYSCALE_WETH_LP=
WETH_402GATE_LP=
GROK_WETH_LP=
LIBRA_WETH_LP=
LABUBU_WETH_LP=
ANI_WETH_LP=
COIN_WETH_LP=
FIFTYONEOH_WETH_LP=
STOCK_WETH_LP=
WETH_MIKA_LP=
WETH_TSLA_LP=

# Token addresses for Uniswap v2 pairs on Base
# TO POPULATE: Search token by name/symbol on basescan.org
# VERIFY with: cast call <TOKEN_ADDRESS> "symbol()(string)" --rpc-url $BASE_RPC
#              cast call <TOKEN_ADDRESS> "decimals()(uint8)" --rpc-url $BASE_RPC
#              cast call <TOKEN_ADDRESS> "name()(string)" --rpc-url $BASE_RPC
X402_TOKEN=
HOOD_TOKEN=
PUMP_TOKEN=
CRCL_TOKEN=
TRUMP_TOKEN=
MSTR_TOKEN=
IP_TOKEN=
IMAGINE_TOKEN=
GRAYSCALE_TOKEN=
FOURTWOGATE_TOKEN=
GROK_TOKEN=
LIBRA_TOKEN=
LABUBU_TOKEN=
ANI_TOKEN=
COIN_TOKEN=
FIFTYONEOH_TOKEN=
STOCK_TOKEN=
MIKA_TOKEN=
TSLA_TOKEN=

# === UNISWAP V3 ON BASE ===
# Verified from: https://docs.uniswap.org/contracts/v3/reference/deployments/base-deployments
UNISWAP_V3_NFT_MANAGER_BASE=0x03a520b32C04BF3bEEf7BEb72E919cf822Ed34f1
# CGN token - TO POPULATE: Search on basescan.org or GeckoTerminal
# Known pools: 0x14528a478b1f757b90d512e479d887c6a4395361 (CGN/USDC 1% fee)
CGN_TOKEN=
CGN_USDC_POOL=

# === AERODROME SLIPSTREAM (CONCENTRATED LIQUIDITY) ON BASE ===
# Verified from: https://basescan.org/address/0x5e7BB104d84c7CB9B682AaC2F3d509f5F406809A
AERODROME_SLIPSTREAM_NFT_MANAGER=0x5e7BB104d84c7CB9B682AaC2F3d509f5F406809A
# Token addresses - TO POPULATE from Aerodrome interface or basescan.org
# VERIFY token addresses with: cast call <TOKEN_ADDRESS> "symbol()(string)" --rpc-url $BASE_RPC
AVNT_TOKEN=
VFY_TOKEN=
VELVET_TOKEN=
EMP_TOKEN=

# === AERODROME V1 (STANDARD AMM) ON BASE ===
# LP tokens for Aerodrome v1 pools - TO POPULATE from Aerodrome interface
# VERIFY LP addresses with: cast call <LP_ADDRESS> "token0()(address)" --rpc-url $BASE_RPC
USDC_EMT_LP=
WETH_W_LP=
WETH_TRAC_LP=
EBTC_CBBTC_LP=
# Token addresses
# TO POPULATE: Search on basescan.org
# VERIFY with: cast call <TOKEN_ADDRESS> "symbol()(string)" --rpc-url $BASE_RPC
EMT_TOKEN=
W_TOKEN=
TRAC_TOKEN=
EBTC_TOKEN=

# === BEEFY VAULTS ON BASE (NEW) ===
# TO POPULATE: Find vault addresses on app.beefy.com or basescan.org
# VERIFY vault: cast call <VAULT_ADDRESS> "want()(address)" --rpc-url $BASE_RPC
#               cast call <VAULT_ADDRESS> "balance()(uint256)" --rpc-url $BASE_RPC
BEEFY_ANON_WETH_VAULT=
BEEFY_CLANKER_WETH_VAULT=
ANON_TOKEN=
CLANKER_TOKEN=

# === BALANCER V3 ON BASE ===
# Verified from: https://docs.balancer.fi/developer-reference/contracts/deployment-addresses/base.html
BALANCER_V3_VAULT_BASE=0xbA1333333333a1BA1108E8412f11850A5C319bA9
BALANCER_WETH_USDT_USDC_POOL_ID=

# === SPECTRA V2 ON BASE ===
# Spectra Protocol - Yield tokenization on Base
# SPECTRA token: 0x64fcc3a02eeeba05ef701b7eed066c6ebd5d4e51 (verified on basescan.org)
# TO POPULATE: Find Principal/Yield token addresses on docs.spectra.finance or basescan.org
SPECTRA_V2_YVBAL_GHO_USR_PRINCIPAL=
SPECTRA_V2_YVBAL_GHO_USR_YIELD=

# ============================================================================
# MULTI-CHAIN RPC ENDPOINTS
# Security: Use public endpoints or placeholders. Keep API keys in .env locally, not in repo.
# ============================================================================
BSC_RPC=https://bsc-dataseed.binance.org/
# Verified from: https://docs.soniclabs.com and https://chainlist.org
SONIC_RPC=https://rpc.soniclabs.com
AVALANCHE_RPC=https://api.avax.network/ext/bc/C/rpc
ARBITRUM_RPC=https://arb1.arbitrum.io/rpc
LINEA_RPC=https://rpc.linea.build
# Verified from: https://chainlist.org and https://eth.llamarpc.com
ETHEREUM_RPC=https://eth.llamarpc.com
SOLANA_RPC=https://api.mainnet-beta.solana.com
APTOS_RPC=https://fullnode.mainnet.aptoslabs.com/v1

# ============================================================================
# BSC (BINANCE SMART CHAIN) ADDRESSES
# TO POPULATE: Find addresses on bscscan.com or app.beefy.com
# VERIFY with: cast call <ADDRESS> "symbol()(string)" --rpc-url $BSC_RPC
# ============================================================================
BEEFY_COAI_USDT_VAULT_BSC=
COAI_TOKEN_BSC=
# BEP-20 USDT on BSC - Verified standard address
USDT_BSC=0x55d398326f99059fF775485246999027B3197955

# ============================================================================
# SONIC CHAIN ADDRESSES
# TO POPULATE: Find addresses on sonicscan.org or protocol interfaces
# VERIFY with: cast call <ADDRESS> "symbol()(string)" --rpc-url $SONIC_RPC
# ============================================================================
BEEFY_S_USDC_VAULT_SONIC=
PEAPODS_SCUSD_MARKET_SONIC=
S_TOKEN_SONIC=
SCUSD_TOKEN_SONIC=
USDC_SONIC=

# ============================================================================
# ARBITRUM ADDRESSES
# TO POPULATE: Find addresses on arbiscan.io
# VERIFY with: cast call <ADDRESS> "symbol()(string)" --rpc-url $ARBITRUM_RPC
# ============================================================================
VAULTCRAFT_VC_WETH_VAULT=
VC_TOKEN_ARBITRUM=
WETH_TOKEN_ADDRESS_ARBITRUM=0x82aF49447D8a07e3bd95BD0d56f35241523fBab1

# ============================================================================
# AVALANCHE ADDRESSES
# TO POPULATE: Find addresses on snowtrace.io
# VERIFY with: cast call <ADDRESS> "symbol()(string)" --rpc-url $AVALANCHE_RPC
# ============================================================================
YIELD_YAK_WETH_KIGU_VAULT=
WETH_E_TOKEN_AVALANCHE=0x49D5c2BdFfac6CE2BFdB6640F4F80f226bc10bAB
KIGU_TOKEN_AVALANCHE=

# ============================================================================
# LINEA ADDRESSES
# TO POPULATE: Find addresses on lineascan.build
# VERIFY with: cast call <ADDRESS> "symbol()(string)" --rpc-url $LINEA_RPC
# ============================================================================
ETHEREX_CL_NFT_MANAGER_LINEA=
CROAK_TOKEN_LINEA=
WETH_TOKEN_ADDRESS_LINEA=0xe5D7C2a44FfDDf6b295A15c148167daaAf5Cf34f

# ============================================================================
# ETHEREUM MAINNET ADDRESSES
# TO POPULATE: Find addresses on etherscan.io
# VERIFY with: cast call <ADDRESS> "symbol()(string)" --rpc-url $ETHEREUM_RPC
# ============================================================================
UNISWAP_V2_ROUTER_ETHEREUM=0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D
BABYGIRL_TOKEN=
BABYGIRL_WETH_LP=
WETH_TOKEN_ADDRESS_ETHEREUM=0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2

# ============================================================================
# SOLANA ADDRESSES (Requires solana-py SDK)
# TO POPULATE: Find program/pool addresses on solscan.io or raydium.io
# VERIFY with: solana account <ADDRESS> --url $SOLANA_RPC
# ============================================================================
RAYDIUM_AMM_PROGRAM=675kPX9MHTjS2zt1qfr1NYHuzeLXfQM9H24wFSUt1Mp8
RAYDIUM_TURTLE_DEX_USDC_POOL=
RAYDIUM_WSOL_NICKEL_POOL=
RAYDIUM_USD1_LIBERTY_POOL=
RAYDIUM_PIPPIN_USDC_POOL=
RAYDIUM_USD1_VALOR_POOL=
TURTLE_DEX_TOKEN=
NICKEL_TOKEN=
LIBERTY_TOKEN=
PIPPIN_TOKEN=
VALOR_TOKEN=
USD1_TOKEN=
USDC_SOLANA=EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v
WSOL_SOLANA=So11111111111111111111111111111111111111112

# ============================================================================
# APTOS ADDRESSES (Requires aptos-sdk)
# TO POPULATE: Find addresses on explorer.aptoslabs.com
# VERIFY with: aptos account list --account <ADDRESS> --url $APTOS_RPC
# ============================================================================
HYPERION_APT_AMI_POOL=
APT_TOKEN=0x1::aptos_coin::AptosCoin
AMI_TOKEN=
